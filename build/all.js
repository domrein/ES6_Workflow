define([], function() {
  "use strict";
  var BaseClass = function BaseClass() {
    this.name = "BaseClass";
  };
  ($traceurRuntime.createClass)(BaseClass, {speak: function() {
      console.log(("Hi! My name is " + this.name + "!"));
    }}, {});
  var $__default = BaseClass;
  return {
    get default() {
      return $__default;
    },
    __esModule: true
  };
});

define(["./BaseClass"], function($__0) {
  "use strict";
  if (!$__0 || !$__0.__esModule)
    $__0 = {default: $__0};
  var BaseClass = $__0.default;
  var SubClass = function SubClass() {
    $traceurRuntime.superCall(this, $SubClass.prototype, "constructor", []);
    this.name = "SubClass";
  };
  var $SubClass = SubClass;
  ($traceurRuntime.createClass)(SubClass, {}, {}, BaseClass);
  var $__default = SubClass;
  return {
    get default() {
      return $__default;
    },
    __esModule: true
  };
});

define(["./SubClass"], function($__0) {
  "use strict";
  if (!$__0 || !$__0.__esModule)
    $__0 = {default: $__0};
  var SubClass = $__0.default;
  function init() {
    var blah = new SubClass();
    blah.speak();
  }
  var $__default = init;
  return {
    get default() {
      return $__default;
    },
    __esModule: true
  };
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB0cmFjZXVyL2dlbmVyYXRlZC9UZW1wbGF0ZVBhcnNlci81IiwiQHRyYWNldXIvZ2VuZXJhdGVkL1RlbXBsYXRlUGFyc2VyLzQiLCJAdHJhY2V1ci9nZW5lcmF0ZWQvVGVtcGxhdGVQYXJzZXIvNiIsIkJhc2VDbGFzcy5qcyIsIkB0cmFjZXVyL2dlbmVyYXRlZC9UZW1wbGF0ZVBhcnNlci83IiwiQHRyYWNldXIvZ2VuZXJhdGVkL1RlbXBsYXRlUGFyc2VyLzAiLCJAdHJhY2V1ci9nZW5lcmF0ZWQvVGVtcGxhdGVQYXJzZXIvMyIsIkB0cmFjZXVyL2dlbmVyYXRlZC9UZW1wbGF0ZVBhcnNlci8xIiwiQHRyYWNldXIvZ2VuZXJhdGVkL1RlbXBsYXRlUGFyc2VyLzIiLCJTdWJDbGFzcy5qcyIsIkB0cmFjZXVyL2dlbmVyYXRlZC9UZW1wbGF0ZVBhcnNlci84IiwiQHRyYWNldXIvZ2VuZXJhdGVkL1RlbXBsYXRlUGFyc2VyLzkiLCJAdHJhY2V1ci9nZW5lcmF0ZWQvVGVtcGxhdGVQYXJzZXIvMTEiLCJAdHJhY2V1ci9nZW5lcmF0ZWQvVGVtcGxhdGVQYXJzZXIvMTAiLCJtYWluLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLEtBQUssQUFBQyxJQ0FOLFVBQVMsQUFBZ0I7O0FDQXpCLEFBQUksSUFBQSxZQ0FXLFNBQU0sVUFBUSxDQUNoQixBQUFDLENBQUU7QUFDWixPQUFHLEtBQUssRUFBSSxZQUFVLENBQUM7RURGYSxBQ0d0QyxDREhzQztBRUF4QyxFQUFDLGVBQWMsWUFBWSxDQUFDLEFBQUMsYURLM0IsS0FBSSxDQUFKLFVBQUssQUFBQyxDQUFFO0FBQ04sWUFBTSxJQUFJLEFBQUMsRUFBQyxpQkFBaUIsRUFBQyxDQUFBLElBQUcsS0FBSyxFQUFDLElBQUUsRUFBQyxDQUFDO0lBQzdDLE1DUG1GO0FDQXJGLEFBQUksSUFBQSxDQUFBLFVBQVMsWUFBb0IsQ0FBQTtBQ0FqQztBQ0FBLGdCQUF3QjtBQUFFLHVCQUF3QjtJQUFFO0FDQXBELGFBQVMsQ0FBRyxLQUFHO0FBQUEsR0ZBUTtBTEVuQixDREZ1QyxDQUFDO0FHUzVDO0FIVEEsS0FBSyxBQUFDLEVTQWdCLGFBQVksRVJBbEMsVUFBUyxJQUFnQjs7QVNBekIsS0FBSSxLQUFpQixHQUFLLEVBQUMsZUFBMkI7QUFDMUMsU0FBb0IsRUFBQyxPQUFNLE1BQW1CLENBQUMsQ0FBQTtBQUFBLElERHBELFVBQVE7QVBBZixBQUFJLElBQUEsV09FVyxTQUFNLFNBQU8sQ0FDZixBQUFDLENBQUU7QUVIaEIsQUZJSSxrQkVKVSxVQUFVLEFBQUMsOENBQzJCLENGR3pDO0FBQ1AsT0FBRyxLQUFLLEVBQUksV0FBUyxDQUFDO0VQTGMsQU9NdEMsQ1BOc0M7QVVBeEMsQUFBSSxJQUFBLHFCQUFvQyxDQUFBO0FDQXhDLEVBQUMsZUFBYyxZQUFZLENBQUMsQUFBQyxrQkpFUyxVQUFRLENJRFU7QVJEeEQsQUFBSSxJQUFBLENBQUEsVUFBUyxXQUFvQixDQUFBO0FDQWpDO0FDQUEsZ0JBQXdCO0FBQUUsdUJBQXdCO0lBQUU7QUNBcEQsYUFBUyxDQUFHLEtBQUc7QUFBQSxHRkFRO0FMRW5CLENERnVDLENBQUM7QVNRNUM7QVRSQSxLQUFLLEFBQUMsRWNBZSxZQUFXLEViQWhDLFVBQVMsSUFBZ0I7O0FTQXpCLEtBQUksS0FBaUIsR0FBSyxFQUFDLGVBQTJCO0FBQzFDLFNBQW9CLEVBQUMsT0FBTSxNQUFtQixDQUFDLENBQUE7QUFBQSxJSURwRCxTQUFPO0FBRUMsU0FBUyxLQUFHLENBQUMsQUFBQyxDQUFFO0FBQzdCLEFBQUksTUFBQSxDQUFBLElBQUcsRUFBSSxJQUFJLFNBQU8sQUFBQyxFQUFDLENBQUM7QUFDekIsT0FBRyxNQUFNLEFBQUMsRUFBQyxDQUFDO0VBSWQ7QVRSSSxBU1FKLElUUkksQ0FBQSxVQUFTLE9BQW9CLENBQUE7QUNBakM7QUNBQSxnQkFBd0I7QUFBRSx1QkFBd0I7SUFBRTtBQ0FwRCxhQUFTLENBQUcsS0FBRztBQUFBLEdGQVE7QUxFbkIsQ0RGdUMsQ0FBQztBY1E1QyIsImZpbGUiOiJhbGwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoJF9fcGxhY2Vob2xkZXJfXzAsICRfX3BsYWNlaG9sZGVyX18xKTsiLCJmdW5jdGlvbigkX19wbGFjZWhvbGRlcl9fMCkge1xuICAgICAgJF9fcGxhY2Vob2xkZXJfXzFcbiAgICB9IiwidmFyICRfX3BsYWNlaG9sZGVyX18wID0gJF9fcGxhY2Vob2xkZXJfXzEiLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBCYXNlQ2xhc3Mge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLm5hbWUgPSBcIkJhc2VDbGFzc1wiO1xuICB9XG4gIFxuICBzcGVhaygpIHtcbiAgICBjb25zb2xlLmxvZyhgSGkhIE15IG5hbWUgaXMgJHt0aGlzLm5hbWV9IWApO1xuICB9XG59XG4iLCIoJHRyYWNldXJSdW50aW1lLmNyZWF0ZUNsYXNzKSgkX19wbGFjZWhvbGRlcl9fMCwgJF9fcGxhY2Vob2xkZXJfXzEsICRfX3BsYWNlaG9sZGVyX18yKSIsInZhciAkX19kZWZhdWx0ID0gJF9fcGxhY2Vob2xkZXJfXzAiLCJyZXR1cm4gJF9fcGxhY2Vob2xkZXJfXzAiLCJnZXQgJF9fcGxhY2Vob2xkZXJfXzAoKSB7IHJldHVybiAkX19wbGFjZWhvbGRlcl9fMTsgfSIsIl9fZXNNb2R1bGU6IHRydWUiLCJpbXBvcnQgQmFzZUNsYXNzIGZyb20gXCIuL0Jhc2VDbGFzc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTdWJDbGFzcyBleHRlbmRzIEJhc2VDbGFzcyB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5uYW1lID0gXCJTdWJDbGFzc1wiO1xuICB9XG59XG4iLCJpZiAoISRfX3BsYWNlaG9sZGVyX18wIHx8ICEkX19wbGFjZWhvbGRlcl9fMS5fX2VzTW9kdWxlKVxuICAgICAgICAgICAgJF9fcGxhY2Vob2xkZXJfXzIgPSB7ZGVmYXVsdDogJF9fcGxhY2Vob2xkZXJfXzN9IiwiJHRyYWNldXJSdW50aW1lLnN1cGVyQ2FsbCgkX19wbGFjZWhvbGRlcl9fMCwgJF9fcGxhY2Vob2xkZXJfXzEsICRfX3BsYWNlaG9sZGVyX18yLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkX19wbGFjZWhvbGRlcl9fMykiLCJ2YXIgJF9fcGxhY2Vob2xkZXJfXzAgPSAkX19wbGFjZWhvbGRlcl9fMSIsIigkdHJhY2V1clJ1bnRpbWUuY3JlYXRlQ2xhc3MpKCRfX3BsYWNlaG9sZGVyX18wLCAkX19wbGFjZWhvbGRlcl9fMSwgJF9fcGxhY2Vob2xkZXJfXzIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkX19wbGFjZWhvbGRlcl9fMykiLCJpbXBvcnQgU3ViQ2xhc3MgZnJvbSBcIi4vU3ViQ2xhc3NcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaW5pdCgpIHtcbiAgdmFyIGJsYWggPSBuZXcgU3ViQ2xhc3MoKTtcbiAgYmxhaC5zcGVhaygpO1xuICAvLyBjb25zb2xlLmxvZyhcInNqZG9maWphc2Rmb2pkc2lcIik7XG4gIC8vIHZhciBmb28gPSBuZXcgU3ViQ2xhc3MoKTtcbiAgLy8gZm9vLnNwZWFrKCk7XG59Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9