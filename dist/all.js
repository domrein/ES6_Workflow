System.register((void 0), [], function() {
  "use strict";
  var BaseClass = function BaseClass() {
    this.name = "BaseClass";
  };
  ($traceurRuntime.createClass)(BaseClass, {speak: function() {
      console.log(("Hi! My name is " + this.name + "!"));
    }}, {});
  var $__default = BaseClass;
  return {get default() {
      return $__default;
    }};
});

System.register((void 0), [], function() {
  "use strict";
  var BaseClass = System.get("BaseClass").default;
  var SubClass = function SubClass() {
    $traceurRuntime.superCall(this, $SubClass.prototype, "constructor", []);
    this.name = "SubClass";
  };
  var $SubClass = SubClass;
  ($traceurRuntime.createClass)(SubClass, {}, {}, BaseClass);
  var $__default = SubClass;
  return {get default() {
      return $__default;
    }};
});

System.register((void 0), [], function() {
  "use strict";
  var SubClass = System.get("SubClass").default;
  function init() {
    var blah = new SubClass();
    blah.speak();
  }
  var $__default = init;
  return {get default() {
      return $__default;
    }};
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB0cmFjZXVyL2dlbmVyYXRlZC9UZW1wbGF0ZVBhcnNlci80IiwiQHRyYWNldXIvZ2VuZXJhdGVkL1RlbXBsYXRlUGFyc2VyLzMiLCJAdHJhY2V1ci9nZW5lcmF0ZWQvVGVtcGxhdGVQYXJzZXIvNSIsIkJhc2VDbGFzcy5qcyIsIkB0cmFjZXVyL2dlbmVyYXRlZC9UZW1wbGF0ZVBhcnNlci82IiwiQHRyYWNldXIvZ2VuZXJhdGVkL1RlbXBsYXRlUGFyc2VyLzAiLCJAdHJhY2V1ci9nZW5lcmF0ZWQvVGVtcGxhdGVQYXJzZXIvMiIsIkB0cmFjZXVyL2dlbmVyYXRlZC9UZW1wbGF0ZVBhcnNlci8xIiwiU3ViQ2xhc3MuanMiLCJAdHJhY2V1ci9nZW5lcmF0ZWQvVGVtcGxhdGVQYXJzZXIvNyIsIkB0cmFjZXVyL2dlbmVyYXRlZC9UZW1wbGF0ZVBhcnNlci84IiwiQHRyYWNldXIvZ2VuZXJhdGVkL1RlbXBsYXRlUGFyc2VyLzEwIiwiQHRyYWNldXIvZ2VuZXJhdGVkL1RlbXBsYXRlUGFyc2VyLzkiLCJtYWluLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLEtBQUssU0FBUyxBQUFDLFVBQW9CLEdBQUMsQ0NBcEMsVUFBUSxBQUFDOztBQ0FULEFBQUksSUFBQSxZQ0FXLFNBQU0sVUFBUSxDQUNoQixBQUFDLENBQUU7QUFDWixPQUFHLEtBQUssRUFBSSxZQUFVLENBQUM7RURGYSxBQ0d0QyxDREhzQztBRUF4QyxFQUFDLGVBQWMsWUFBWSxDQUFDLEFBQUMsYURLM0IsS0FBSSxDQUFKLFVBQUssQUFBQyxDQUFFO0FBQ04sWUFBTSxJQUFJLEFBQUMsRUFBQyxpQkFBaUIsRUFBQyxDQUFBLElBQUcsS0FBSyxFQUFDLElBQUUsRUFBQyxDQUFDO0lBQzdDLE1DUG1GO0FDQXJGLEFBQUksSUFBQSxDQUFBLFVBQVMsWUFBb0IsQ0FBQTtBQ0FqQyxTQ0FBLGFBQXdCO0FBQUUsdUJBQXdCO0lBQUUsRURBN0I7QUxFbkIsQ0RGb0QsQ0FBQztBR1N6RDtBSFRBLEtBQUssU0FBUyxBQUFDLFVBQW9CLEdBQUMsQ0NBcEMsVUFBUSxBQUFDOztJT0FGLFVBQVEsRUNBZixDQUFBLE1BQUssSUFBSSxBQUFDLGFBQWtCO0FQQTVCLEFBQUksSUFBQSxXTUVXLFNBQU0sU0FBTyxDQUNmLEFBQUMsQ0FBRTtBRUhoQixBRklJLGtCRUpVLFVBQVUsQUFBQyw4Q0FDMkIsQ0ZHekM7QUFDUCxPQUFHLEtBQUssRUFBSSxXQUFTLENBQUM7RU5MYyxBTU10QyxDTk5zQztBU0F4QyxBQUFJLElBQUEscUJBQW9DLENBQUE7QUNBeEMsRUFBQyxlQUFjLFlBQVksQ0FBQyxBQUFDLGtCSkVTLFVBQVEsQ0lEVTtBUER4RCxBQUFJLElBQUEsQ0FBQSxVQUFTLFdBQW9CLENBQUE7QUNBakMsU0NBQSxhQUF3QjtBQUFFLHVCQUF3QjtJQUFFLEVEQTdCO0FMRW5CLENERm9ELENBQUM7QVFRekQ7QVJSQSxLQUFLLFNBQVMsQUFBQyxVQUFvQixHQUFDLENDQXBDLFVBQVEsQUFBQzs7SVlBRixTQUFPLEVKQWQsQ0FBQSxNQUFLLElBQUksQUFBQyxZQUFrQjtBSUViLFNBQVMsS0FBRyxDQUFDLEFBQUMsQ0FBRTtBQUM3QixBQUFJLE1BQUEsQ0FBQSxJQUFHLEVBQUksSUFBSSxTQUFPLEFBQUMsRUFBQyxDQUFDO0FBQ3pCLE9BQUcsTUFBTSxBQUFDLEVBQUMsQ0FBQztFQUlkO0FSUkksQVFRSixJUlJJLENBQUEsVUFBUyxPQUFvQixDQUFBO0FDQWpDLFNDQUEsYUFBd0I7QUFBRSx1QkFBd0I7SUFBRSxFREE3QjtBTEVuQixDREZvRCxDQUFDO0FhUXpEIiwiZmlsZSI6ImFsbC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlN5c3RlbS5yZWdpc3RlcigkX19wbGFjZWhvbGRlcl9fMCwgW10sICRfX3BsYWNlaG9sZGVyX18xKTsiLCJmdW5jdGlvbigpIHtcbiAgICAgICRfX3BsYWNlaG9sZGVyX18wXG4gICAgfSIsInZhciAkX19wbGFjZWhvbGRlcl9fMCA9ICRfX3BsYWNlaG9sZGVyX18xIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmFzZUNsYXNzIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5uYW1lID0gXCJCYXNlQ2xhc3NcIjtcbiAgfVxuICBcbiAgc3BlYWsoKSB7XG4gICAgY29uc29sZS5sb2coYEhpISBNeSBuYW1lIGlzICR7dGhpcy5uYW1lfSFgKTtcbiAgfVxufVxuIiwiKCR0cmFjZXVyUnVudGltZS5jcmVhdGVDbGFzcykoJF9fcGxhY2Vob2xkZXJfXzAsICRfX3BsYWNlaG9sZGVyX18xLCAkX19wbGFjZWhvbGRlcl9fMikiLCJ2YXIgJF9fZGVmYXVsdCA9ICRfX3BsYWNlaG9sZGVyX18wIiwicmV0dXJuICRfX3BsYWNlaG9sZGVyX18wIiwiZ2V0ICRfX3BsYWNlaG9sZGVyX18wKCkgeyByZXR1cm4gJF9fcGxhY2Vob2xkZXJfXzE7IH0iLCJpbXBvcnQgQmFzZUNsYXNzIGZyb20gXCIuL0Jhc2VDbGFzc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTdWJDbGFzcyBleHRlbmRzIEJhc2VDbGFzcyB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5uYW1lID0gXCJTdWJDbGFzc1wiO1xuICB9XG59XG4iLCJTeXN0ZW0uZ2V0KCRfX3BsYWNlaG9sZGVyX18wKSIsIiR0cmFjZXVyUnVudGltZS5zdXBlckNhbGwoJF9fcGxhY2Vob2xkZXJfXzAsICRfX3BsYWNlaG9sZGVyX18xLCAkX19wbGFjZWhvbGRlcl9fMixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJF9fcGxhY2Vob2xkZXJfXzMpIiwidmFyICRfX3BsYWNlaG9sZGVyX18wID0gJF9fcGxhY2Vob2xkZXJfXzEiLCIoJHRyYWNldXJSdW50aW1lLmNyZWF0ZUNsYXNzKSgkX19wbGFjZWhvbGRlcl9fMCwgJF9fcGxhY2Vob2xkZXJfXzEsICRfX3BsYWNlaG9sZGVyX18yLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJF9fcGxhY2Vob2xkZXJfXzMpIiwiaW1wb3J0IFN1YkNsYXNzIGZyb20gXCIuL1N1YkNsYXNzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGluaXQoKSB7XG4gIHZhciBibGFoID0gbmV3IFN1YkNsYXNzKCk7XG4gIGJsYWguc3BlYWsoKTtcbiAgLy8gY29uc29sZS5sb2coXCJzamRvZmlqYXNkZm9qZHNpXCIpO1xuICAvLyB2YXIgZm9vID0gbmV3IFN1YkNsYXNzKCk7XG4gIC8vIGZvby5zcGVhaygpO1xufSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==